djangorest - Django Application Installation Instructions


This documentation refers to installing dejavu and dejavurest on 
Ubuntu 14.04 - 64-bit OS.

Assumes that jangorest is going to reside in /data. Make adujustments based 
on your local setup

Step 1:

Installation of dependencies:

sudo apt-get install build-essential python-dev
sudo apt-get install gfortran
sudo apt-get install swig
sudo apt-get install libatlas-dev
sudo apt-get install liblapack-dev
sudo apt-get install libfreetype6 libfreetype6-dev
sudo apt-get install libpng-dev
sudo apt-get install libxft-dev
sudo apt-get install graphviz libgraphviz-dev
sudo apt-get install pandoc
sudo apt-get install libxml2-dev libxslt-dev zlib1g-dev
sudo apt-get install python-virtualenv
sudo apt-get install mysql-server
sudo apt-get install libmysqlclient-dev
sudo apt-get install libasound-dev
sudo apt-get install portaudio19-dev

sudo add-apt-repository ppa:mc3man/trusty-media
sudo apt-get update
sudo apt-get install ffmpeg

Step 2:

Create  Virtual Environment for dejavurest and dejavu
and activate it

mkdir /data
cd data
virtualenv dejavu_env

cd dejavu_env
source bin/activate

Step 3:

Install dejavu's depencies and dejavu

I tested this on Python 2.7 on Ubuntu 14.04 Desktop 64-bit.

Install the following libraries using pip

Note: You can copy the following section into a file called
requirements.txt and run
pip install -r requirements.txt

Django==1.8.5
django-filter==0.11.0
djangorestframework==3.2.4
envoy==0.0.3
funcsigs==0.4
Markdown==2.6.2
matplotlib==1.4.3
mock==1.3.0
mp3play==0.1.15
MySQL-python==1.2.5
nose==1.3.7
numpy==1.9.3
osascript==0.0.4
pbr==1.8.0
PyAudio==0.2.8
PyDejavu==0.1.3
pydub==0.15.0
pyglet==1.2.4
pyparsing==2.0.3
python-dateutil==2.4.2
pytz==2015.6
requests==2.8.0
scipy==0.16.0
six==1.9.0
wheel==0.24.0

Step 4:

Creation of MySQL Database

crete a database called "dejavu"
setup a user called "dejavu" with password "dejavu123" and provide him access to the database

Step 5:

Installation of 
Copy the code ( top level dejavurest folder to /data/code )

Check /data/code/dejavurest/dejavurest/settings.py, /data/code/dejavurest/dejavurest/wsgi.py, /data/code/dejavurest/manage.py files to see if you need to tweak them in any way.

You will run all the following from inside the virtual env

cd /data/code/dejavurest
python manage.py makemigration
python manage.py migrate
python manage.py createsuperuser

python manage.py runserver

Now, you should be able to access from a local browser:

http://localhost:8000/api/list etc.

To test the Rest API Calls, you can use either curl, Advanced Rest Client add-on to Chrome Browser or any Rest or HTTP library.

Here are the sample curl commands:

Listing:

curl -X GET http://localhost:8000/api/list

Record Finger Printing:

curl -X POST -H "Content-Type: multipart/form-data" -F "file=@/home/murthyraju/Documents/fl/dejavu/code/samples/short/short_opor_-_08_-_Svi_Gradovi.mp3" -F "title=Svi Gradovi Song in MP3 format" -F "description=A very nice song. Must listen" -F "url=http://www.google.com/Svi_Gradovi.mp3" http://localhost:8000/api/add_record


Matching:

curl -X POST -F "file=@/home/murthyraju/Documents/fl/dejavu/code/samples/short/short_opor_-_08_-_Svi_Gradovi.mp3" http://localhost:8000/api/match

Cleanup of the repository:

curl -X DELETE  http://localhost:8000/api/song_repo






